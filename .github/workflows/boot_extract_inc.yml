name: Extract image (Incremental OTA)

on:
    workflow_dispatch:
        inputs:
            baseversion:
                description: 'Base version'
                required: true
                type: string
            fileurl:
                description: 'link of full OxygenOS/ColorOS file'
                required: true
                type: string

env:
    GH_TOKEN: ${{ github.token }}

jobs:
    extracting-boot:
        runs-on: ubuntu-latest
        outputs:
          id: ota-link
        steps:
            - name: Checkout Repository
              uses: actions/checkout@main
              
            - name: Checkout Base Version 
              uses: robinraju/release-downloader@v1
              with:
                repository: 'snowwolf725/OnePlus12-fw-repos'
                tag: "${{ github.event.inputs.baseversion }}"
                fileName: '*.zip'
                
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                   python-version: '3.13'

            - name: Setup environment
              run: |
                sudo apt-get install zip unzip git
                
            - name: Setup Base version rom
              run: |
                unzip boot.zip
                unzip init_boot.zip
                unzip recovery.zip
                unzip dtbo.zip
                unzip system_dlkm.zip
                unzip vbmeta.zip
                unzip vbmeta_system.zip
                unzip vbmeta_vendor.zip
                unzip vendor_boot.zip
                unzip vendor_dlkm.zip
                mkdir base
                mkdir new
                mv *.img base

            - name: Setup OTA Extractor 
              run: |
                git clone https://github.com/LineageOS/android_prebuilts_extract-tools.git

            - name: Download  Incremental OTA
              run: |
                wget -q --show-progress -O ota.zip "${{ github.event.inputs.fileurl }}"
                                         
            - name: Extracting OTA
              run: |
                 ls
                 unzip ota.zip
                 android_prebuilts_extract-tools/linux-x86/bin/ota_extractor -input_dir base -output_dir new -partitions boot,init_boot,recovery,dtbo,system_dlkm,vbmeta,vbmeta_system,vbmeta_vendor,vendor_boot,vendor_dlkm -payload payload.bin
                 mv new/*.img .
                 zip boot.zip boot.img
                 zip init_boot.zip init_boot.img
                 zip recovery.zip recovery.img
                 zip dtbo.zip dtbo.img
                 zip system_dlkm.zip system_dlkm.img
                 zip vbmeta.zip vbmeta.img
                 zip vbmeta_system.zip vbmeta_system.img
                 zip vbmeta_vendor.zip vbmeta_vendor.img
                 zip vendor_boot.zip vendor_boot.img
                 zip vendor_dlkm.zip vendor_dlkm.img
                                                             
            - name: Creating release
              run: |
                TAG_NAME=$(grep "product_name=" META-INF/com/android/metadata | cut -d = -f 2)
                REL_NAME=$(grep "version_name=" META-INF/com/android/metadata | sed 's/^[^=]*=//')
                gh release create $REL_NAME --title $(echo $REL_NAME) --notes "" boot.zip init_boot.zip recovery.zip dtbo.zip system_dlkm.zip vbmeta.zip vbmeta_system.zip vbmeta_vendor.zip vendor_boot.zip vendor_dlkm.zip
