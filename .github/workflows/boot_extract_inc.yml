name: Extract image (Incremental OTA)

on:
    workflow_dispatch:
        inputs:
            oldversion:
                description: 'Base version'
                required: true
                type: string
            fileurl:
                description: 'link of full OxygenOS/ColorOS file'
                required: true
                type: string

env:
    GH_TOKEN: ${{ github.token }}

jobs:
    extracting-boot:
        runs-on: ubuntu-latest
        outputs:
          id: ota-link
        steps:
            - name: Checkout Repository
              uses: actions/checkout@main
              
            - name: Checkout Base Version 
              uses: robinraju/release-downloader@v1
              with:
                repository: 'snowwolf725/OnePlus12-fw-repos'
                tag: 'PJD110_15.0.0.205(CN01)'
                fileName: '*.zip'
                
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                   python-version: '3.13'

            - name: Setup environment
              run: |
                sudo apt-get install zip unzip git
                
            - name: Setup Base version rom
              run: |
                unzip boot.zip
                unzip init_boot.zip
                unzip recovery.zip
                mkdir base
                mv *.img base

            - name: Setup OTA Extractor 
              run: |
                git clone https://github.com/LineageOS/android_prebuilts_extract-tools.git

            - name: Download  Incremental OTA
                wget -q --show-progress -O ota.zip "${{ github.event.inputs.fileurl }}"
                                         
#            - name: Extracting OTA
#              run: |
#                payload_dumper --partitions boot,init_boot,recovery ${{ github.event.inputs.fileurl }}
#                mv output/*.img .
#                zip boot.zip boot.img
#                zip init_boot.zip init_boot.img
#                zip recovery.zip recovery.img
                                            
#            - name: Setting up Release name
#              run: |  
#                 pip install unzip-http
#                 unzip_http ${{ github.event.inputs.fileurl }} META-INF/com/android/metadata
                 
#            - name: Creating release
#              run: |
#                TAG_NAME=$(grep "product_name=" metadata | cut -d = -f 2)
#                REL_NAME=$(grep "version_name=" metadata | sed 's/^[^=]*=//')
#                gh release create $REL_NAME --title $(echo $REL_NAME) --notes "" boot.zip init_boot.zip recovery.zip 
