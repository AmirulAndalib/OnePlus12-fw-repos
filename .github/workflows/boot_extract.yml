name: Extract image

on:
    workflow_dispatch:
        inputs:
            fileurl:
                description: 'link of full OxygenOS/ColorOS file'
                required: true
                type: string

env:
    GH_TOKEN: ${{ github.token }}

jobs:
    extracting-boot:
        runs-on: ubuntu-latest
        outputs:
          id: ota-link
        steps:
            - name: Checkout Repository
              uses: actions/checkout@main

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                   python-version: '3.13'

            - name: Setup environment
              run: |
                sudo apt-get install zip
                
            - name: Download payload dumper
              run: |
                pip install legacy-cgi
                pip install git+https://github.com/snowwolf725/payload-dumper
            
            - name: Extracting OTA
              run: |
                payload_dumper --partitions boot,init_boot,recovery,dtbo,vbmeta,vbmeta_system,vbmeta_vendor ${{ github.event.inputs.fileurl }}
                mv output/*.img .
                zip boot.zip boot.img
                zip init_boot.zip init_boot.img
                zip recovery.zip recovery.img
                zip dtbo.zip dtbo.img
                zip system_dlkm.zip system_dlkm.img
                zip vbmeta.zip vbmeta.img
                zip vbmeta_system.zip vbmeta_system.img
                zip vbmeta_vendor.zip vbmeta_vendor.img
                zip vendor_boot.zip vendor_boot.img
                zip vendor_dlkm.zip vendor_dlkm.img
                                            
            - name: Setting up Release name
              run: |  
                 pip install unzip-http
                 unzip_http ${{ github.event.inputs.fileurl }} META-INF/com/android/metadata
                 
            - name: Creating release
              run: |
                EU="(EU)"
                GLO="(GLO)"
                TAG_NAME=$(grep "product_name=" metadata | cut -d = -f 2)
                REL_NAME=$(grep "version_name=" metadata | sed 's/^[^=]*=//')
                if [ $TAG_NAME == 'CPH2581' ]; then REL_NAME="$REL_NAME$GLO";elif [ $TAG_NAME == "CPH2581EEA" ]; then REL_NAME="$REL_NAME$EU";fi
                gh release create $REL_NAME --title $(echo $REL_NAME) --notes "" boot.zip init_boot.zip recovery.zip dtbo.zip vbmeta.zip vbmeta_system.zip vbmeta_vendor.zip 
